{"remainingRequest":"/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/node_modules/babel-loader/lib/index.js!/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/src/views/mxgraph-text/anchors.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/src/views/mxgraph-text/anchors.vue","mtime":1597717429000},{"path":"/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wangshi/Desktop/盟拓软件项目/bi-table-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG14Z3JhcGggZnJvbSAnQC91dGlscy9ncmFwaCc7CnZhciBteEdyYXBoID0gbXhncmFwaC5teEdyYXBoLAogICAgbXhDbGllbnQgPSBteGdyYXBoLm14Q2xpZW50LAogICAgbXhVdGlscyA9IG14Z3JhcGgubXhVdGlscywKICAgIG14Q2VsbCA9IG14Z3JhcGgubXhDZWxsLAogICAgbXhHZW9tZXRyeSA9IG14Z3JhcGgubXhHZW9tZXRyeSwKICAgIG14RGl2UmVzaXplciA9IG14Z3JhcGgubXhEaXZSZXNpemVyLAogICAgbXhDb25zdGFudHMgPSBteGdyYXBoLm14Q29uc3RhbnRzLAogICAgbXhSdWJiZXJiYW5kID0gbXhncmFwaC5teFJ1YmJlcmJhbmQsCiAgICBteENvbm5lY3Rpb25IYW5kbGVyID0gbXhncmFwaC5teENvbm5lY3Rpb25IYW5kbGVyLAogICAgbXhUb29sYmFyID0gbXhncmFwaC5teFRvb2xiYXIsCiAgICBteEdyYXBoTW9kZWwgPSBteGdyYXBoLm14R3JhcGhNb2RlbCwKICAgIG14S2V5SGFuZGxlciA9IG14Z3JhcGgubXhLZXlIYW5kbGVyLAogICAgbXhJbWFnZSA9IG14Z3JhcGgubXhJbWFnZSwKICAgIG14RXZlbnQgPSBteGdyYXBoLm14RXZlbnQsCiAgICBteENvZGVjID0gbXhncmFwaC5teENvZGVjLAogICAgbXhTaGFwZSA9IG14Z3JhcGgubXhTaGFwZSwKICAgIG14Q29ubmVjdGlvbkNvbnN0cmFpbnQgPSBteGdyYXBoLm14Q29ubmVjdGlvbkNvbnN0cmFpbnQsCiAgICBteFBvaW50ID0gbXhncmFwaC5teFBvaW50LAogICAgbXhQb2x5bGluZSA9IG14Z3JhcGgubXhQb2x5bGluZTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBjb21wdXRlZDoge30sCiAgd2F0Y2g6IHt9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0QW5jaG9yOiBmdW5jdGlvbiBjcmVhdEFuY2hvcihjb250YWluZXIpIHsKICAgICAgLy8gT3ZlcnJpZGRlbiB0byBkZWZpbmUgcGVyLXNoYXBlIGNvbm5lY3Rpb24gcG9pbnRzCiAgICAgIG14R3JhcGgucHJvdG90eXBlLmdldEFsbENvbm5lY3Rpb25Db25zdHJhaW50cyA9IGZ1bmN0aW9uICh0ZXJtaW5hbCwgc291cmNlKSB7CiAgICAgICAgaWYgKHRlcm1pbmFsICE9IG51bGwgJiYgdGVybWluYWwuc2hhcGUgIT0gbnVsbCkgewogICAgICAgICAgaWYgKHRlcm1pbmFsLnNoYXBlLnN0ZW5jaWwgIT0gbnVsbCkgewogICAgICAgICAgICBpZiAodGVybWluYWwuc2hhcGUuc3RlbmNpbC5jb25zdHJhaW50cyAhPSBudWxsKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHRlcm1pbmFsLnNoYXBlLnN0ZW5jaWwuY29uc3RyYWludHM7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSBpZiAodGVybWluYWwuc2hhcGUuY29uc3RyYWludHMgIT0gbnVsbCkgewogICAgICAgICAgICByZXR1cm4gdGVybWluYWwuc2hhcGUuY29uc3RyYWludHM7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gbnVsbDsKICAgICAgfTsgLy8gRGVmaW5lcyB0aGUgZGVmYXVsdCBjb25zdHJhaW50cyBmb3IgYWxsIHNoYXBlcwoKCiAgICAgIG14U2hhcGUucHJvdG90eXBlLmNvbnN0cmFpbnRzID0gW25ldyBteENvbm5lY3Rpb25Db25zdHJhaW50KG5ldyBteFBvaW50KDAuMjUsIDApLCB0cnVlKSwgbmV3IG14Q29ubmVjdGlvbkNvbnN0cmFpbnQobmV3IG14UG9pbnQoMC41LCAwKSwgdHJ1ZSksIG5ldyBteENvbm5lY3Rpb25Db25zdHJhaW50KG5ldyBteFBvaW50KDAuNzUsIDApLCB0cnVlKSwgbmV3IG14Q29ubmVjdGlvbkNvbnN0cmFpbnQobmV3IG14UG9pbnQoMCwgMC4yNSksIHRydWUpLCBuZXcgbXhDb25uZWN0aW9uQ29uc3RyYWludChuZXcgbXhQb2ludCgwLCAwLjUpLCB0cnVlKSwgbmV3IG14Q29ubmVjdGlvbkNvbnN0cmFpbnQobmV3IG14UG9pbnQoMCwgMC43NSksIHRydWUpLCBuZXcgbXhDb25uZWN0aW9uQ29uc3RyYWludChuZXcgbXhQb2ludCgxLCAwLjI1KSwgdHJ1ZSksIG5ldyBteENvbm5lY3Rpb25Db25zdHJhaW50KG5ldyBteFBvaW50KDEsIDAuNSksIHRydWUpLCBuZXcgbXhDb25uZWN0aW9uQ29uc3RyYWludChuZXcgbXhQb2ludCgxLCAwLjc1KSwgdHJ1ZSksIG5ldyBteENvbm5lY3Rpb25Db25zdHJhaW50KG5ldyBteFBvaW50KDAuMjUsIDEpLCB0cnVlKSwgbmV3IG14Q29ubmVjdGlvbkNvbnN0cmFpbnQobmV3IG14UG9pbnQoMC41LCAxKSwgdHJ1ZSksIG5ldyBteENvbm5lY3Rpb25Db25zdHJhaW50KG5ldyBteFBvaW50KDAuNzUsIDEpLCB0cnVlKV07IC8vIEVkZ2VzIGhhdmUgbm8gY29ubmVjdGlvbiBwb2ludHMKCiAgICAgIG14UG9seWxpbmUucHJvdG90eXBlLmNvbnN0cmFpbnRzID0gbnVsbDsKCiAgICAgIGlmICghbXhDbGllbnQuaXNCcm93c2VyU3VwcG9ydGVkKCkpIHsKICAgICAgICAvLyBEaXNwbGF5cyBhbiBlcnJvciBtZXNzYWdlIGlmIHRoZSBicm93c2VyIGlzIG5vdCBzdXBwb3J0ZWQuCiAgICAgICAgbXhVdGlscy5lcnJvcignQnJvd3NlciBpcyBub3Qgc3VwcG9ydGVkIScsIDIwMCwgZmFsc2UpOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIERpc2FibGVzIHRoZSBidWlsdC1pbiBjb250ZXh0IG1lbnUKICAgICAgICBteEV2ZW50LmRpc2FibGVDb250ZXh0TWVudShjb250YWluZXIpOyAvLyBDcmVhdGVzIHRoZSBncmFwaCBpbnNpZGUgdGhlIGdpdmVuIGNvbnRhaW5lcgoKICAgICAgICB2YXIgZ3JhcGggPSBuZXcgbXhHcmFwaChjb250YWluZXIpOwogICAgICAgIGdyYXBoLnNldENvbm5lY3RhYmxlKHRydWUpOyAvLyBFbmFibGVzIGNvbm5lY3QgcHJldmlldyBmb3IgdGhlIGRlZmF1bHQgZWRnZSBzdHlsZQoKICAgICAgICBncmFwaC5jb25uZWN0aW9uSGFuZGxlci5jcmVhdGVFZGdlU3RhdGUgPSBmdW5jdGlvbiAobWUpIHsKICAgICAgICAgIHZhciBlZGdlID0gZ3JhcGguY3JlYXRlRWRnZShudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKTsKICAgICAgICAgIHJldHVybiBuZXcgbXhDZWxsU3RhdGUodGhpcy5ncmFwaC52aWV3LCBlZGdlLCB0aGlzLmdyYXBoLmdldENlbGxTdHlsZShlZGdlKSk7CiAgICAgICAgfTsgLy8gU3BlY2lmaWVzIHRoZSBkZWZhdWx0IGVkZ2Ugc3R5bGUKCgogICAgICAgIGdyYXBoLmdldFN0eWxlc2hlZXQoKS5nZXREZWZhdWx0RWRnZVN0eWxlKClbJ2VkZ2VTdHlsZSddID0gJ29ydGhvZ29uYWxFZGdlU3R5bGUnOyAvLyBFbmFibGVzIHJ1YmJlcmJhbmQgc2VsZWN0aW9uCgogICAgICAgIG5ldyBteFJ1YmJlcmJhbmQoZ3JhcGgpOyAvLyBHZXRzIHRoZSBkZWZhdWx0IHBhcmVudCBmb3IgaW5zZXJ0aW5nIG5ldyBjZWxscy4gVGhpcwogICAgICAgIC8vIGlzIG5vcm1hbGx5IHRoZSBmaXJzdCBjaGlsZCBvZiB0aGUgcm9vdCAoaWUuIGxheWVyIDApLgoKICAgICAgICB2YXIgcGFyZW50ID0gZ3JhcGguZ2V0RGVmYXVsdFBhcmVudCgpOyAvLyBBZGRzIGNlbGxzIHRvIHRoZSBtb2RlbCBpbiBhIHNpbmdsZSBzdGVwCgogICAgICAgIGdyYXBoLmdldE1vZGVsKCkuYmVnaW5VcGRhdGUoKTsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIHZhciB2MSA9IGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICdIZWxsbywnLCAyMCwgMjAsIDgwLCAzMCk7CiAgICAgICAgICB2YXIgdjIgPSBncmFwaC5pbnNlcnRWZXJ0ZXgocGFyZW50LCBudWxsLCAnV29ybGQhJywgMjAwLCAxNTAsIDgwLCAzMCk7CiAgICAgICAgICB2YXIgZTEgPSBncmFwaC5pbnNlcnRFZGdlKHBhcmVudCwgbnVsbCwgJycsIHYxLCB2Mik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIC8vIFVwZGF0ZXMgdGhlIGRpc3BsYXkKICAgICAgICAgIGdyYXBoLmdldE1vZGVsKCkuZW5kVXBkYXRlKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICBfdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICBpZiAoX3RoaXMuJHJlZnMuZ3JhcGhBbmNob3JzKSB7CiAgICAgICAgX3RoaXMuY3JlYXRBbmNob3IoX3RoaXMuJHJlZnMuZ3JhcGhBbmNob3JzKTsKICAgICAgfQogICAgfSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkge30sCiAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKSB7fSwKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7fSwKICBiZWZvcmVVcGRhdGU6IGZ1bmN0aW9uIGJlZm9yZVVwZGF0ZSgpIHt9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7fSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkge30sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7fSwKICBhY3RpdmF0ZWQ6IGZ1bmN0aW9uIGFjdGl2YXRlZCgpIHt9Cn07"},{"version":3,"sources":["anchors.vue"],"names":[],"mappings":";;;;;;;;;;;;AAaA,OAAA,OAAA,MAAA,eAAA;IAEA,O,GAmBA,O,CAnBA,O;IACA,Q,GAkBA,O,CAlBA,Q;IACA,O,GAiBA,O,CAjBA,O;IACA,M,GAgBA,O,CAhBA,M;IACA,U,GAeA,O,CAfA,U;IACA,Y,GAcA,O,CAdA,Y;IACA,W,GAaA,O,CAbA,W;IACA,Y,GAYA,O,CAZA,Y;IACA,mB,GAWA,O,CAXA,mB;IACA,S,GAUA,O,CAVA,S;IACA,Y,GASA,O,CATA,Y;IACA,Y,GAQA,O,CARA,Y;IACA,O,GAOA,O,CAPA,O;IACA,O,GAMA,O,CANA,O;IACA,O,GAKA,O,CALA,O;IACA,O,GAIA,O,CAJA,O;IACA,sB,GAGA,O,CAHA,sB;IACA,O,GAEA,O,CAFA,O;IACA,U,GACA,O,CADA,U;AAEA,eAAA;AACA,EAAA,UAAA,EAAA,EADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA,EAAA;AACA,GAJA;AAKA,EAAA,QAAA,EAAA,EALA;AAMA,EAAA,KAAA,EAAA,EANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,uBACA,SADA,EACA;AACA;AACA,MAAA,OAAA,CAAA,SAAA,CAAA,2BAAA,GAAA,UACA,QADA,EAEA,MAFA,EAGA;AACA,YAAA,QAAA,IAAA,IAAA,IAAA,QAAA,CAAA,KAAA,IAAA,IAAA,EAAA;AACA,cAAA,QAAA,CAAA,KAAA,CAAA,OAAA,IAAA,IAAA,EAAA;AACA,gBAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,WAAA,IAAA,IAAA,EAAA;AACA,qBAAA,QAAA,CAAA,KAAA,CAAA,OAAA,CAAA,WAAA;AACA;AACA,WAJA,MAIA,IAAA,QAAA,CAAA,KAAA,CAAA,WAAA,IAAA,IAAA,EAAA;AACA,mBAAA,QAAA,CAAA,KAAA,CAAA,WAAA;AACA;AACA;;AAEA,eAAA,IAAA;AACA,OAfA,CAFA,CAmBA;;;AACA,MAAA,OAAA,CAAA,SAAA,CAAA,WAAA,GAAA,CACA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CADA,EAEA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAFA,EAGA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAHA,EAIA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAJA,EAKA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CALA,EAMA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CANA,EAOA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CAPA,EAQA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,EAAA,IAAA,CARA,EASA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,EAAA,IAAA,CATA,EAUA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAVA,EAWA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAXA,EAYA,IAAA,sBAAA,CAAA,IAAA,OAAA,CAAA,IAAA,EAAA,CAAA,CAAA,EAAA,IAAA,CAZA,CAAA,CApBA,CAmCA;;AACA,MAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,IAAA;;AACA,UAAA,CAAA,QAAA,CAAA,kBAAA,EAAA,EAAA;AACA;AACA,QAAA,OAAA,CAAA,KAAA,CAAA,2BAAA,EAAA,GAAA,EAAA,KAAA;AACA,OAHA,MAGA;AACA;AACA,QAAA,OAAA,CAAA,kBAAA,CAAA,SAAA,EAFA,CAIA;;AACA,YAAA,KAAA,GAAA,IAAA,OAAA,CAAA,SAAA,CAAA;AACA,QAAA,KAAA,CAAA,cAAA,CAAA,IAAA,EANA,CAQA;;AACA,QAAA,KAAA,CAAA,iBAAA,CAAA,eAAA,GAAA,UAAA,EAAA,EAAA;AACA,cAAA,IAAA,GAAA,KAAA,CAAA,UAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAEA,iBAAA,IAAA,WAAA,CACA,KAAA,KAAA,CAAA,IADA,EAEA,IAFA,EAGA,KAAA,KAAA,CAAA,YAAA,CAAA,IAAA,CAHA,CAAA;AAKA,SARA,CATA,CAmBA;;;AACA,QAAA,KAAA,CAAA,aAAA,GAAA,mBAAA,GAAA,WAAA,IACA,qBADA,CApBA,CAuBA;;AACA,YAAA,YAAA,CAAA,KAAA,EAxBA,CA0BA;AACA;;AACA,YAAA,MAAA,GAAA,KAAA,CAAA,gBAAA,EAAA,CA5BA,CA8BA;;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,WAAA;;AACA,YAAA;AACA,cAAA,EAAA,GAAA,KAAA,CAAA,YAAA,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AACA,cAAA,EAAA,GAAA,KAAA,CAAA,YAAA,CAAA,MAAA,EAAA,IAAA,EAAA,QAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AACA,cAAA,EAAA,GAAA,KAAA,CAAA,UAAA,CAAA,MAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA;AACA,SAJA,SAIA;AACA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,SAAA;AACA;AACA;AACA;AAlFA,GAPA;AA2FA,EAAA,OA3FA,qBA2FA;AACA,QAAA,KAAA,GAAA,IAAA;;AACA,IAAA,KAAA,CAAA,SAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,KAAA,CAAA,YAAA,EAAA;AACA,QAAA,KAAA,CAAA,WAAA,CAAA,KAAA,CAAA,KAAA,CAAA,YAAA;AACA;AACA,KAJA;AAKA,GAlGA;AAmGA,EAAA,OAnGA,qBAmGA,CAAA,CAnGA;AAoGA,EAAA,YApGA,0BAoGA,CAAA,CApGA;AAqGA,EAAA,WArGA,yBAqGA,CAAA,CArGA;AAsGA,EAAA,YAtGA,0BAsGA,CAAA,CAtGA;AAuGA,EAAA,OAvGA,qBAuGA,CAAA,CAvGA;AAwGA,EAAA,aAxGA,2BAwGA,CAAA,CAxGA;AAyGA,EAAA,SAzGA,uBAyGA,CAAA,CAzGA;AA0GA,EAAA,SA1GA,uBA0GA,CAAA;AA1GA,CAAA","sourcesContent":["<!--\n * @Descripttion: \n * @version: \n * @Author: sueRimn\n * @Date: 2020-08-18 10:16:06\n * @LastEditors: sueRimn\n * @LastEditTime: 2020-08-18 10:23:49\n-->\n<template>\n  <div id=\"graphAnchors\" ref=\"graphAnchors\" class=\"\"></div>\n</template>\n\n<script>\nimport mxgraph from '@/utils/graph';\nconst {\n  mxGraph,\n  mxClient,\n  mxUtils,\n  mxCell,\n  mxGeometry,\n  mxDivResizer,\n  mxConstants,\n  mxRubberband,\n  mxConnectionHandler,\n  mxToolbar,\n  mxGraphModel,\n  mxKeyHandler,\n  mxImage,\n  mxEvent,\n  mxCodec,\n  mxShape,\n  mxConnectionConstraint,\n  mxPoint,\n  mxPolyline\n} = mxgraph;\nexport default {\n  components: {},\n  data() {\n    return {};\n  },\n  computed: {},\n  watch: {},\n  methods: {\n    creatAnchor(container) {\n      // Overridden to define per-shape connection points\n      mxGraph.prototype.getAllConnectionConstraints = function(\n        terminal,\n        source\n      ) {\n        if (terminal != null && terminal.shape != null) {\n          if (terminal.shape.stencil != null) {\n            if (terminal.shape.stencil.constraints != null) {\n              return terminal.shape.stencil.constraints;\n            }\n          } else if (terminal.shape.constraints != null) {\n            return terminal.shape.constraints;\n          }\n        }\n\n        return null;\n      };\n\n      // Defines the default constraints for all shapes\n      mxShape.prototype.constraints = [\n        new mxConnectionConstraint(new mxPoint(0.25, 0), true),\n        new mxConnectionConstraint(new mxPoint(0.5, 0), true),\n        new mxConnectionConstraint(new mxPoint(0.75, 0), true),\n        new mxConnectionConstraint(new mxPoint(0, 0.25), true),\n        new mxConnectionConstraint(new mxPoint(0, 0.5), true),\n        new mxConnectionConstraint(new mxPoint(0, 0.75), true),\n        new mxConnectionConstraint(new mxPoint(1, 0.25), true),\n        new mxConnectionConstraint(new mxPoint(1, 0.5), true),\n        new mxConnectionConstraint(new mxPoint(1, 0.75), true),\n        new mxConnectionConstraint(new mxPoint(0.25, 1), true),\n        new mxConnectionConstraint(new mxPoint(0.5, 1), true),\n        new mxConnectionConstraint(new mxPoint(0.75, 1), true)\n      ];\n\n      // Edges have no connection points\n      mxPolyline.prototype.constraints = null;\n      if (!mxClient.isBrowserSupported()) {\n        // Displays an error message if the browser is not supported.\n        mxUtils.error('Browser is not supported!', 200, false);\n      } else {\n        // Disables the built-in context menu\n        mxEvent.disableContextMenu(container);\n\n        // Creates the graph inside the given container\n        var graph = new mxGraph(container);\n        graph.setConnectable(true);\n\n        // Enables connect preview for the default edge style\n        graph.connectionHandler.createEdgeState = function(me) {\n          var edge = graph.createEdge(null, null, null, null, null);\n\n          return new mxCellState(\n            this.graph.view,\n            edge,\n            this.graph.getCellStyle(edge)\n          );\n        };\n\n        // Specifies the default edge style\n        graph.getStylesheet().getDefaultEdgeStyle()['edgeStyle'] =\n          'orthogonalEdgeStyle';\n\n        // Enables rubberband selection\n        new mxRubberband(graph);\n\n        // Gets the default parent for inserting new cells. This\n        // is normally the first child of the root (ie. layer 0).\n        var parent = graph.getDefaultParent();\n\n        // Adds cells to the model in a single step\n        graph.getModel().beginUpdate();\n        try {\n          var v1 = graph.insertVertex(parent, null, 'Hello,', 20, 20, 80, 30);\n          var v2 = graph.insertVertex(parent, null, 'World!', 200, 150, 80, 30);\n          var e1 = graph.insertEdge(parent, null, '', v1, v2);\n        } finally {\n          // Updates the display\n          graph.getModel().endUpdate();\n        }\n      }\n    }\n  },\n  created() {\n    const _this = this;\n    _this.$nextTick(() => {\n      if (_this.$refs.graphAnchors) {\n        _this.creatAnchor(_this.$refs.graphAnchors);\n      }\n    });\n  },\n  mounted() {},\n  beforeCreate() {},\n  beforeMount() {},\n  beforeUpdate() {},\n  updated() {},\n  beforeDestroy() {},\n  destroyed() {},\n  activated() {}\n};\n</script>\n<style lang=\"scss\" scoped></style>\n"],"sourceRoot":"src/views/mxgraph-text"}]}