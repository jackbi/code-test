{"remainingRequest":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/babel-loader/lib/index.js!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/src/views/Kity.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/src/views/Kity.vue","mtime":1596778282644},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/.babelrc","mtime":1597027069260},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG14Z3JhcGggZnJvbSAnLi9pbmRleCc7CnZhciBteEdyYXBoID0gbXhncmFwaC5teEdyYXBoLAogICAgbXhDbGllbnQgPSBteGdyYXBoLm14Q2xpZW50LAogICAgbXhDb2RlYyA9IG14Z3JhcGgubXhDb2RlYywKICAgIG14VXRpbHMgPSBteGdyYXBoLm14VXRpbHMsCiAgICBteENvbnN0YW50cyA9IG14Z3JhcGgubXhDb25zdGFudHMsCiAgICBteFBlcmltZXRlciA9IG14Z3JhcGgubXhQZXJpbWV0ZXI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAga206IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDoge30sCiAgd2F0Y2g6IHt9LAogIG1ldGhvZHM6IHt9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7fSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaWYgKCFteENsaWVudC5pc0Jyb3dzZXJTdXBwb3J0ZWQoKSkgewogICAgICAvLyDliKTmlq3mmK/lkKbmlK/mjIFteGdyYXBoCiAgICAgIG14VXRpbHMuZXJyb3IoJ0Jyb3dzZXIgaXMgbm90IHN1cHBvcnRlZCEnLCAyMDAsIGZhbHNlKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIOWGjeWuueWZqOS4reWIm+W7uuWbvuihqAogICAgICB2YXIgY29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dyYXBoQ29udGFpbmVyJyk7CiAgICAgIHZhciBNeEdyYXBoID0gbXhHcmFwaDsKICAgICAgdmFyIE14Q29kZWMgPSBteENvZGVjOwogICAgICB2YXIgZ3JhcGggPSBuZXcgTXhHcmFwaChjb250YWluZXIpOyAvLyDnlJ/miJAgSGVsbG8gd29ybGQhCgogICAgICB2YXIgcGFyZW50ID0gZ3JhcGguZ2V0RGVmYXVsdFBhcmVudCgpOwogICAgICBncmFwaC5nZXRNb2RlbCgpLmJlZ2luVXBkYXRlKCk7CgogICAgICB0cnkgewogICAgICAgIC8v55+p5b2i6buY6K6k5oOF5Ya15LiLCiAgICAgICAgLy8gZ3JhcGguaW5zZXJ0VmVydGV4KHBhcmVudCwgbnVsbCwgJ+efqeW9oicsIDUwLCA1MCwgMjAwLCAxMDAsICJzaGFwZT1yZWN0YW5nbGU7cGVyaW1ldGVyPWVsbGlwc2VQZXJpbWV0ZXI7Iik7CiAgICAgICAgLy8gLy8g55+p5b2iIOWchuinkuefqeW9ogogICAgICAgIC8vIC8vIHNoYXBlPXJvdW5kZWQg5a6a5LmJ5ZyG6KeSICBhcmNTaXplPTEwIOWumuS5ieWchuinkuW8p+W6pgogICAgICAgIC8vIGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICflnIbop5Lnn6nlvaInLCAzMDAsIDUwLCAyMDAsIDEwMCwgInJvdW5kZWQ9dHJ1ZTtwZXJpbWV0ZXI9ZWxsaXBzZVBlcmltZXRlcjthcmNTaXplPTIwOyIpOwogICAgICAgIC8vIC8vIOeUu+akreWchgogICAgICAgIC8vIC8vIHNoYXBlPWVsaXBzZSDlrprkuYnmpK3lnIYgIHBlcmltZXRlcj1lbGxpcHNlUGVyaW1ldGVyIOiuqei/nue6v+eahOeureWktOaIlui1t+eCueinpuWIsOi+uee8mAogICAgICAgIC8vIGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICfmpK3lnIYnLCA1NTAsIDUwLCAyMDAsIDEwMCwgInNoYXBlPWVsbGlwc2U7cGVyaW1ldGVyPWVsbGlwc2VQZXJpbWV0ZXI7Iik7CiAgICAgICAgLy8gLy8g55S75LiJ6KeS5b2iCiAgICAgICAgLy8gLy8gc2hhcGU9dHJpYW5nbCDlrprkuYnkuInop5LlvaIgIHBlcmltZXRlcj1lbGxpcHNlUGVyaW1ldGVyIOiuqei/nue6v+eahOeureWktOaIlui1t+eCueinpuWIsOi+uee8mCBkaXJlY3Rpb249c291dGgg6K6p5LiJ6KeS5b2i5YCS56uLCiAgICAgICAgLy8gZ3JhcGguaW5zZXJ0VmVydGV4KHBhcmVudCwgbnVsbCwgJ+S4ieinkuW9oicsIDgwMCwgNTAsIDIwMCwgMjAwLCAic2hhcGU9dHJpYW5nbGU7cGVyaW1ldGVyPWVsbGlwc2VQZXJpbWV0ZXI7ZGlyZWN0aW9uPXNvdXRoOyIpOwogICAgICAgIC8vIC8vIOeUu+iPseW9ogogICAgICAgIC8vIC8vIHNoYXBlPXJob21idXMg5a6a5LmJ6I+x5b2iCiAgICAgICAgLy8gZ3JhcGguaW5zZXJ0VmVydGV4KHBhcmVudCwgbnVsbCwgJ+S4ieinkuW9oicsIDEwNTAsIDUwLCAyMDAsIDIwMCwgInNoYXBlPXJob21idXM7cGVyaW1ldGVyPWVsbGlwc2VQZXJpbWV0ZXI7Iik7CiAgICAgICAgLy8gLy8g55S75p+x5b2iCiAgICAgICAgLy8gLy8gc2hhcGU9Y3lsaW5kZXIg5a6a5LmJ5p+x5b2iCiAgICAgICAgLy8gZ3JhcGguaW5zZXJ0VmVydGV4KHBhcmVudCwgbnVsbCwgJ+afseW9oicsIDEzMDAsIDUwLCAyMDAsIDIwMCwgInNoYXBlPWN5bGluZGVyO3BlcmltZXRlcj1lbGxpcHNlUGVyaW1ldGVyOyIpOwogICAgICAgIC8vIC8vIOeUu+S6ugogICAgICAgIC8vIC8vIHNoYXBlPWFjdG9yIOWumuS5ieaJp+ihjOiAhQogICAgICAgIC8vIGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICfmiafooYzogIUnLCA1MCwgMzAwLCAxMDAsIDIwMCwgInNoYXBlPWFjdG9yO3BlcmltZXRlcj1lbGxpcHNlUGVyaW1ldGVyOyIpOwogICAgICAgIC8vIC8vIOeUu+S6kQogICAgICAgIC8vIGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICfkupEnLCAzMDAsIDMwMCwgMjAwLCAxMDAsICJzaGFwZT1jbG91ZDtwZXJpbWV0ZXI9ZWxsaXBzZVBlcmltZXRlcjsiKTsvL+azs+mBkwogICAgICAgIC8vIGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICfms7PpgZMnLCA4MDAsIDMwMCwgMjAwLCAxMDAsICJzaGFwZT1zd2ltbGFuZTtwZXJpbWV0ZXI9ZWxsaXBzZVBlcmltZXRlcjsiKTsvL+WPjOakreWchgogICAgICAgIC8vIGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICflj4zlnIYnLCAxMDUwLCAzMDAsIDIwMCwgMTAwLCAic2hhcGU9ZG91YmxlRWxsaXBzZTtwZXJpbWV0ZXI9ZWxsaXBzZVBlcmltZXRlcjsiKTsvL+WFrei+ueW9ogogICAgICAgIC8vIGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICflha3ovrnlvaInLCAxMzAwLCAzMDAsIDE1MCwgMTUwLCAic2hhcGU9aGV4YWdvbjtwZXJpbWV0ZXI9ZWxsaXBzZVBlcmltZXRlcjsiKTsKICAgICAgICB2YXIgc3R5bGUgPSBncmFwaC5nZXRTdHlsZXNoZWV0KCkuZ2V0RGVmYXVsdFZlcnRleFN0eWxlKCk7CiAgICAgICAgdmFyIHN0eWxlMSA9IG14VXRpbHMuY2xvbmUoc3R5bGUpOwogICAgICAgIHN0eWxlMVtteENvbnN0YW50cy5TVFlMRV9TSEFQRV0gPSBteENvbnN0YW50cy5TSEFQRV9FTExJUFNFOwogICAgICAgIHN0eWxlMVtteENvbnN0YW50cy5TVFlMRV9QRVJJTUVURVJdID0gbXhQZXJpbWV0ZXIuRWxsaXBzZVBlcmltZXRlcjsKICAgICAgICBzdHlsZTFbbXhDb25zdGFudHMuU1RZTEVfR1JBRElFTlRDT0xPUl0gPSAnd2hpdGUnOwogICAgICAgIGdyYXBoLmdldFN0eWxlc2hlZXQoKS5wdXRDZWxsU3R5bGUoInN0eWxlMSIsIHN0eWxlMSk7CiAgICAgICAgdmFyIHYxID0gZ3JhcGguaW5zZXJ0VmVydGV4KHBhcmVudCwgbnVsbCwgJ0hlbGxvLCcsIDIwLCAyMDAsIDgwLCAzMCk7CiAgICAgICAgdmFyIHYyID0gZ3JhcGguaW5zZXJ0VmVydGV4KHBhcmVudCwgbnVsbCwgJ1dvcmxkJywgMjAwLCAxNTAsIDgwLCAzMCwgJ3N0eWxlMScpOwogICAgICAgIHZhciB2MyA9IGdyYXBoLmluc2VydFZlcnRleChwYXJlbnQsIG51bGwsICdldmVyeUJvZHkhJywgMzAwLCAzNTAsIDYwLCA2MCk7CiAgICAgICAgZ3JhcGguaW5zZXJ0RWRnZShwYXJlbnQsIG51bGwsICcnLCB2MSwgdjIpOwogICAgICAgIGdyYXBoLmluc2VydEVkZ2UocGFyZW50LCBudWxsLCAnJywgdjIsIHYzKTsgLy8gIGdyYXBoLmluc2VydEVkZ2UocGFyZW50LCBudWxsLCAnJywgdjEsIHYzKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAvLyBVcGRhdGVzIHRoZSBkaXNwbGF5CiAgICAgICAgZ3JhcGguZ2V0TW9kZWwoKS5lbmRVcGRhdGUoKTsKICAgICAgfSAvLyDmiZPljIVYTUzmlofku7YKCgogICAgICB2YXIgZW5jb2RlciA9IG5ldyBNeENvZGVjKCk7CiAgICAgIHZhciB4eCA9IGVuY29kZXIuZW5jb2RlKGdyYXBoLmdldE1vZGVsKCkpOyAvLyDkv53lrZjliLBnZXRYbWzlj4LmlbDkuK0KCiAgICAgIHRoaXMuZ2V0WG1sID0gbXhVdGlscy5nZXRYbWwoeHgpOwogICAgfQogIH0sCiAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKSB7fSwKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7fSwKICBiZWZvcmVVcGRhdGU6IGZ1bmN0aW9uIGJlZm9yZVVwZGF0ZSgpIHt9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7fSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkge30sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7fSwKICBhY3RpdmF0ZWQ6IGZ1bmN0aW9uIGFjdGl2YXRlZCgpIHt9Cn07"},{"version":3,"sources":["Kity.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n * @Descripttion: \n * @version: \n * @Author: sueRimn\n * @Date: 2020-07-17 15:43:49\n * @LastEditors: sueRimn\n * @LastEditTime: 2020-08-07 13:31:22\n--> \n<template>\n  <div class=''>\n    <div id=\"graphContainer\"></div>\n  </div>\n</template>\n\n<script>\nimport mxgraph from './index';\nconst {mxGraph, mxClient, mxCodec, mxUtils, mxConstants, mxPerimeter} = mxgraph;\nexport default {\n  components: {},\n  data() {\n  return {\n    km: null\n  };\n  },\n  computed: {},\n  watch: {},\n  methods: {\n  },\n  created() {\n\n  },\nmounted () {\n           if (!mxClient.isBrowserSupported()) {\n               // 判断是否支持mxgraph\n               mxUtils.error('Browser is not supported!', 200, false);\n           } else {\n               // 再容器中创建图表\n               let container = document.getElementById('graphContainer');\n               let MxGraph = mxGraph;\n               let MxCodec = mxCodec;\n               var graph = new MxGraph(container);\n               // 生成 Hello world!\n               var parent = graph.getDefaultParent();\n               graph.getModel().beginUpdate();\n               try {\n                 //矩形默认情况下\n        // graph.insertVertex(parent, null, '矩形', 50, 50, 200, 100, \"shape=rectangle;perimeter=ellipsePerimeter;\");\n        // // 矩形 圆角矩形\n        // // shape=rounded 定义圆角  arcSize=10 定义圆角弧度\n        // graph.insertVertex(parent, null, '圆角矩形', 300, 50, 200, 100, \"rounded=true;perimeter=ellipsePerimeter;arcSize=20;\");\n        // // 画椭圆\n        // // shape=elipse 定义椭圆  perimeter=ellipsePerimeter 让连线的箭头或起点触到边缘\n        // graph.insertVertex(parent, null, '椭圆', 550, 50, 200, 100, \"shape=ellipse;perimeter=ellipsePerimeter;\");\n        // // 画三角形\n        // // shape=triangl 定义三角形  perimeter=ellipsePerimeter 让连线的箭头或起点触到边缘 direction=south 让三角形倒立\n        // graph.insertVertex(parent, null, '三角形', 800, 50, 200, 200, \"shape=triangle;perimeter=ellipsePerimeter;direction=south;\");\n        // // 画菱形\n        // // shape=rhombus 定义菱形\n        // graph.insertVertex(parent, null, '三角形', 1050, 50, 200, 200, \"shape=rhombus;perimeter=ellipsePerimeter;\");\n        // // 画柱形\n        // // shape=cylinder 定义柱形\n        // graph.insertVertex(parent, null, '柱形', 1300, 50, 200, 200, \"shape=cylinder;perimeter=ellipsePerimeter;\");\n        // // 画人\n        // // shape=actor 定义执行者\n        // graph.insertVertex(parent, null, '执行者', 50, 300, 100, 200, \"shape=actor;perimeter=ellipsePerimeter;\");\n        // // 画云\n        // graph.insertVertex(parent, null, '云', 300, 300, 200, 100, \"shape=cloud;perimeter=ellipsePerimeter;\");//泳道\n        // graph.insertVertex(parent, null, '泳道', 800, 300, 200, 100, \"shape=swimlane;perimeter=ellipsePerimeter;\");//双椭圆\n        // graph.insertVertex(parent, null, '双圆', 1050, 300, 200, 100, \"shape=doubleEllipse;perimeter=ellipsePerimeter;\");//六边形\n        // graph.insertVertex(parent, null, '六边形', 1300, 300, 150, 150, \"shape=hexagon;perimeter=ellipsePerimeter;\");\n                  var style = graph.getStylesheet().getDefaultVertexStyle();\n                  var style1 = mxUtils.clone(style);\n                  style1[mxConstants.STYLE_SHAPE] = mxConstants.SHAPE_ELLIPSE;\n                  style1[mxConstants.STYLE_PERIMETER] = mxPerimeter.EllipsePerimeter;\n                  style1[mxConstants.STYLE_GRADIENTCOLOR] = 'white';\n                  graph.getStylesheet().putCellStyle(\"style1\", style1);\n                   var v1 = graph.insertVertex(parent, null, 'Hello,', 20, 200, 80, 30);\n                   var v2 = graph.insertVertex(parent, null, 'World', 200, 150, 80, 30, 'style1');\n                   var v3 = graph.insertVertex(parent, null, 'everyBody!', 300, 350, 60, 60);\n                   graph.insertEdge(parent, null, '', v1, v2);\n                   graph.insertEdge(parent, null, '', v2, v3);\n                  //  graph.insertEdge(parent, null, '', v1, v3);\n               } finally {\n                   // Updates the display\n                   graph.getModel().endUpdate();\n               }\n               // 打包XML文件\n               let encoder = new MxCodec();\n               let xx = encoder.encode(graph.getModel());\n               // 保存到getXml参数中\n               this.getXml = mxUtils.getXml(xx);\n           }\n       },\n  beforeCreate() {},\n  beforeMount() {},\n  beforeUpdate() {},\n  updated() {},\n  beforeDestroy() {},\n  destroyed() {},\n  activated() {},\n}\n</script>\n<style lang='scss' scoped>\n</style>"],"sourceRoot":"src/views"}]}