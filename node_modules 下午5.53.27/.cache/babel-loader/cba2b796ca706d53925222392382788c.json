{"remainingRequest":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/babel-loader/lib/index.js!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/src/views/zrender.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/src/views/zrender.vue","mtime":1594805776923},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB6cmVuZGVyIGZyb20gJ3pyZW5kZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHpyOiBudWxsLAogICAgICBncm91cDogbnVsbCwKICAgICAgZGF0YUpzb246IFt7CiAgICAgICAgdmFsdWU6ICcyMDEwLTAyLTA1IDEyOjAwJywKICAgICAgICBzdGF0dXM6ICcxJywKICAgICAgICBuYW1lOiAn56ys5LiA6Zi25q615rWL6K+V5rWL6K+VJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6ICcyMDEwLTAyLTA1IDEzOjAwJywKICAgICAgICBzdGF0dXM6ICcyJywKICAgICAgICBuYW1lOiAn56ys5LqM6Zi25q615rWL6K+VJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6ICcyMDEwLTAyLTA1IDE0OjAwJywKICAgICAgICBzdGF0dXM6ICczJywKICAgICAgICBuYW1lOiAn56ys5LiJ6Zi25q615rWL6K+V5rWL6K+VJwogICAgICB9LCB7CiAgICAgICAgdmFsdWU6ICcyMDEwLTAyLTA1IDE1OjAwJywKICAgICAgICBzdGF0dXM6ICc0JywKICAgICAgICBuYW1lOiAn56ys5Zub6Zi25q615rWL6K+V5rWL6K+V5rWL6K+V5rWL6K+VJwogICAgICB9XQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7fSwKICB3YXRjaDoge30sCiAgbWV0aG9kczogewogICAgaW5pdDogZnVuY3Rpb24gaW5pdCgpIHsKICAgICAgaWYgKHRoaXMuenIpIHsKICAgICAgICB0aGlzLnpyLmRpc3Bvc2UoKTsKICAgICAgfQoKICAgICAgdGhpcy56ciA9IHpyZW5kZXIuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnei1yZW5kZXItY29uJykpOwogICAgICB0aGlzLmdyb3VwID0gbmV3IHpyZW5kZXIuR3JvdXAoKTsKICAgICAgdGhpcy5kcmF3UmVhZHkoKTsKICAgICAgdGhpcy56ci5hZGQodGhpcy5ncm91cCk7CiAgICB9LAoKICAgIC8qKgogICAgICogQG5hbWU6IOeUu+WbvuWJjeWHhuWkh+aVsOaNrgogICAgICogQHRlc3Q6IHRlc3QgZm9udAogICAgICogQG1zZzogCiAgICAgKiBAcGFyYW0ge3R5cGV9IAogICAgICogQHJldHVybjogCiAgICAgKi8KICAgIGRyYXdSZWFkeTogZnVuY3Rpb24gZHJhd1JlYWR5KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHdpZHRoID0gdGhpcy56ci5kb20uY2xpZW50V2lkdGg7CiAgICAgIHZhciBkYXRhcyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5kYXRhSnNvbikpOwogICAgICB2YXIgc3RlcFdpZHRoID0gd2lkdGggLyBkYXRhcy5sZW5ndGg7CiAgICAgIGRhdGFzLm1hcChmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgICAgICAvLyAgaXRlbS53aWR0aCA9IHN0ZXBXaWR0aDsKICAgICAgICAvLyAgaXRlbS5oZWlnaHQgPSB0aGlzLnpyLmRvbS5jbGllbnRIZWlnaHQ7CiAgICAgICAgLy8gIGl0ZW0ueCA9IGluZGV4ICogc3RlcFdpZHRoOwogICAgICAgIC8vICBpdGVtLnkgPSAwOwogICAgICAgIHZhciBpbmZvTWF0aW9uID0gewogICAgICAgICAgd2lkdGg6IHN0ZXBXaWR0aCwKICAgICAgICAgIGhlaWdodDogMzAsCiAgICAgICAgICB4OiBpbmRleCAqIHN0ZXBXaWR0aCwKICAgICAgICAgIHk6IDAsCiAgICAgICAgICBDaXJjbGVSYWRpdXM6IDEwLAogICAgICAgICAgaXRlbTogaXRlbQogICAgICAgIH07CgogICAgICAgIF90aGlzLmRyYXdXcmFwKGluZm9NYXRpb24pOwoKICAgICAgICBpZiAoaW5kZXggPCBkYXRhcy5sZW5ndGggLSAxKSB7CiAgICAgICAgICBfdGhpcy5kcmF3TGluZXMoaW5mb01hdGlvbik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBkcmF3V3JhcDogZnVuY3Rpb24gZHJhd1dyYXAoZGF0YXMpIHsKICAgICAgdmFyIHRvcFRleHQgPSBuZXcgenJlbmRlci5SZWN0KHsKICAgICAgICBzaGFwZTogewogICAgICAgICAgeDogZGF0YXMueCwKICAgICAgICAgIHk6IGRhdGFzLnksCiAgICAgICAgICB3aWR0aDogZGF0YXMud2lkdGgsCiAgICAgICAgICBoZWlnaHQ6IGRhdGFzLmhlaWdodAogICAgICAgIH0sCiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgIHRleHQ6IGRhdGFzLml0ZW0udmFsdWUsCiAgICAgICAgICBmaWxsOiAndHJhbnNwYXJlbnQnLAogICAgICAgICAgLy8g5aGr5YWF6aKc6Imy77yM6buY6K6kIzAwMAogICAgICAgICAgc3Ryb2tlOiAnIzAwMCcsCiAgICAgICAgICAvLyDmj4/ovrnpopzoibLvvIzpu5jorqRudWxsCiAgICAgICAgICBsaW5lV2lkdGg6IDAgLy8g57q/5a6977yMIOm7mOiupDEKCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdmFyIG1pZEdyYXAgPSBuZXcgenJlbmRlci5DaXJjbGUoewogICAgICAgIHNoYXBlOiB7CiAgICAgICAgICBjeDogZGF0YXMud2lkdGggLyAyICsgZGF0YXMueCwKICAgICAgICAgIC8vIOWchuW/g3jlnZDmoIcKICAgICAgICAgIGN5OiBkYXRhcy5oZWlnaHQgKyBkYXRhcy5DaXJjbGVSYWRpdXMsCiAgICAgICAgICAvLyDlnIblv4N55Z2Q5qCHCiAgICAgICAgICByOiBkYXRhcy5DaXJjbGVSYWRpdXMgLy8g5ZyG55qE5Y2K5b6ECgogICAgICAgIH0sCiAgICAgICAgc3R5bGU6IHsKICAgICAgICAgIGZpbGw6ICd0cmFuc3BhcmVudCcsCiAgICAgICAgICAvLyDloavlhYXpopzoibLvvIzpu5jorqQjMDAwCiAgICAgICAgICBzdHJva2U6ICcjMDAwJywKICAgICAgICAgIC8vIOaPj+i+ueminOiJsu+8jOm7mOiupG51bGwKICAgICAgICAgIGxpbmVXaWR0aDogMiAvLyDnur/lrr3vvIwg6buY6K6kMQoKICAgICAgICB9CiAgICAgIH0pOwogICAgICB2YXIgYXJycyA9IGRhdGFzLml0ZW0ubmFtZS5zcGxpdCgnJyk7CiAgICAgIHZhciBib3R0b21UZXh0ID0gbmV3IHpyZW5kZXIuUmVjdCh7CiAgICAgICAgc2hhcGU6IHsKICAgICAgICAgIHg6IGRhdGFzLngsCiAgICAgICAgICB5OiBkYXRhcy5oZWlnaHQgKyBkYXRhcy5DaXJjbGVSYWRpdXMgKiAyLAogICAgICAgICAgd2lkdGg6IGRhdGFzLndpZHRoLAogICAgICAgICAgaGVpZ2h0OiBkYXRhcy5oZWlnaHQKICAgICAgICB9LAogICAgICAgIHN0eWxlOiB7CiAgICAgICAgICB0ZXh0OiBhcnJzLmpvaW4oJ1xuJyksCiAgICAgICAgICBmaWxsOiAndHJhbnNwYXJlbnQnLAogICAgICAgICAgLy8g5aGr5YWF6aKc6Imy77yM6buY6K6kIzAwMAogICAgICAgICAgc3Ryb2tlOiAnIzAwMCcsCiAgICAgICAgICAvLyDmj4/ovrnpopzoibLvvIzpu5jorqRudWxsCiAgICAgICAgICBsaW5lV2lkdGg6IDAsCiAgICAgICAgICAvLyDnur/lrr3vvIwg6buY6K6kMQogICAgICAgICAgdGV4dFBvc2l0aW9uOiAnYm90dG9tJywKICAgICAgICAgIHRleHRPZmZzZXQ6IFswLCAtMzBdCiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5ncm91cC5hZGQodG9wVGV4dCkuYWRkKG1pZEdyYXApLmFkZChib3R0b21UZXh0KTsKICAgIH0sCiAgICBkcmF3TGluZXM6IGZ1bmN0aW9uIGRyYXdMaW5lcyhkYXRhcykgewogICAgICB2YXIgbGluZXMgPSBuZXcgenJlbmRlci5MaW5lKHsKICAgICAgICBzaGFwZTogewogICAgICAgICAgeDE6IGRhdGFzLnggKyBkYXRhcy53aWR0aCAvIDIgKyBkYXRhcy5DaXJjbGVSYWRpdXMsCiAgICAgICAgICB5MTogZGF0YXMuaGVpZ2h0ICsgZGF0YXMuQ2lyY2xlUmFkaXVzLAogICAgICAgICAgeDI6IGRhdGFzLnggKyBkYXRhcy53aWR0aCAvIDIgKyBkYXRhcy53aWR0aCAtIGRhdGFzLkNpcmNsZVJhZGl1cywKICAgICAgICAgIHkyOiBkYXRhcy5oZWlnaHQgKyBkYXRhcy5DaXJjbGVSYWRpdXMKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLmdyb3VwLmFkZChsaW5lcyk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgdGhpcy5pbml0KCk7CgogICAgd2luZG93Lm9ucmVzaXplID0gZnVuY3Rpb24gKCkgewogICAgICBfdGhpcy5pbml0KCk7CiAgICB9OwogIH0sCiAgYmVmb3JlQ3JlYXRlOiBmdW5jdGlvbiBiZWZvcmVDcmVhdGUoKSB7fSwKICBiZWZvcmVNb3VudDogZnVuY3Rpb24gYmVmb3JlTW91bnQoKSB7fSwKICBiZWZvcmVVcGRhdGU6IGZ1bmN0aW9uIGJlZm9yZVVwZGF0ZSgpIHt9LAogIHVwZGF0ZWQ6IGZ1bmN0aW9uIHVwZGF0ZWQoKSB7fSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkge30sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7fSwKICBhY3RpdmF0ZWQ6IGZ1bmN0aW9uIGFjdGl2YXRlZCgpIHt9Cn07"},{"version":3,"sources":["zrender.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n * @Descripttion: \n * @version: \n * @Author: sueRimn\n * @Date: 2020-07-15 16:21:50\n * @LastEditors: sueRimn\n * @LastEditTime: 2020-07-15 17:36:16\n--> \n<template>\n  <div class='z-render'>\n    <div id=\"z-render-con\">\n\n    </div>\n  </div>\n</template>\n\n<script>\n  import zrender from 'zrender'\n  export default {\n   components: {},\n   data() {\n    return {\n      zr: null,\n      group: null,\n      dataJson: [\n        {\n          value: '2010-02-05 12:00',\n          status: '1',\n          name: '第一阶段测试测试'\n        },\n        {\n          value: '2010-02-05 13:00',\n          status: '2',\n          name: '第二阶段测试'\n        },\n        {\n          value: '2010-02-05 14:00',\n          status: '3',\n          name: '第三阶段测试测试'\n        },\n        {\n          value: '2010-02-05 15:00',\n          status: '4',\n          name: '第四阶段测试测试测试测试'\n        }\n      ]\n    };\n   },\n   computed: {},\n   watch: {},\n   methods: {\n     init () {\n       if (this.zr) {\n         this.zr.dispose()\n       }\n        this.zr = zrender.init(document.getElementById('z-render-con'));\n        this.group = new zrender.Group();\n        this.drawReady();\n        this.zr.add(this.group);\n     },\n     /**\n      * @name: 画图前准备数据\n      * @test: test font\n      * @msg: \n      * @param {type} \n      * @return: \n      */\n     drawReady() {\n       let _this = this;\n       let width = this.zr.dom.clientWidth;\n       let datas = JSON.parse(JSON.stringify(this.dataJson));\n       let stepWidth =  width / datas.length\n       datas.map((item, index) => {\n        //  item.width = stepWidth;\n        //  item.height = this.zr.dom.clientHeight;\n        //  item.x = index * stepWidth;\n        //  item.y = 0;\n        let infoMation = {\n          width: stepWidth,\n          height: 30,\n          x: index * stepWidth,\n          y: 0,\n          CircleRadius: 10,\n          item\n        }\n        _this.drawWrap(infoMation);\n        if (index < datas.length - 1) {\n          _this.drawLines(infoMation);\n        }\n       })\n     },\n     drawWrap(datas) {\n       let topText = new zrender.Rect({\n         shape: {\n           x: datas.x,\n           y: datas.y,\n           width: datas.width,\n           height: datas.height\n         },\n         style: {\n            text: datas.item.value,\n            fill: 'transparent', // 填充颜色，默认#000\n            stroke: '#000', // 描边颜色，默认null\n            lineWidth: 0 // 线宽， 默认1\n         }\n       })\n       let midGrap = new zrender.Circle({\n         shape: {\n          cx: datas.width / 2 + datas.x, // 圆心x坐标\n          cy: datas.height + datas.CircleRadius, // 圆心y坐标\n          r: datas.CircleRadius, // 圆的半径\n        },\n        style: {\n          fill: 'transparent', // 填充颜色，默认#000\n          stroke: '#000', // 描边颜色，默认null\n          lineWidth: 2 // 线宽， 默认1\n        },\n       })\n       let arrs = datas.item.name.split('');\n       let bottomText = new zrender.Rect({\n         shape: {\n           x: datas.x,\n           y: datas.height + datas.CircleRadius * 2,\n           width: datas.width,\n           height: datas.height \n         },\n         style: {\n            text: arrs.join('\\n'),\n            fill: 'transparent', // 填充颜色，默认#000\n            stroke: '#000', // 描边颜色，默认null\n            lineWidth: 0, // 线宽， 默认1\n            textPosition: 'bottom',\n            textOffset: [0, -30]\n         }\n       })\n       this.group.add(topText).add(midGrap).add(bottomText);\n     },\n     drawLines(datas) {\n      let lines = new zrender.Line({\n         shape: {\n           x1: datas.x + datas.width / 2 + datas.CircleRadius,\n            y1: datas.height + datas.CircleRadius,\n            x2: datas.x + datas.width / 2 + datas.width - datas.CircleRadius,\n            y2: datas.height + datas.CircleRadius\n         }\n       })\n       this.group.add(lines)\n     }\n   },\n   created() {\n   },\n   mounted() {\n     let _this = this;\n     this.init();\n     window.onresize = () => {\n       _this.init();\n     }\n   },\n   beforeCreate() {},\n   beforeMount() {},\n   beforeUpdate() {},\n   updated() {},\n   beforeDestroy() {},\n   destroyed() {},\n   activated() {},\n  }\n</script>\n<style scoped>\n.z-render{\n  width: 100%;\n  height: 100%;\n}\n\n#z-render-con{\n  width: 100%;\n  height: 100%;\n}\n</style>"],"sourceRoot":"src/views"}]}