{"remainingRequest":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/babel-loader/lib/index.js!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/src/views/mxgraph-text/toobar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/src/views/mxgraph-text/toobar.vue","mtime":1597746012371},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiangwenbin/Documents/mengtuo/测试/bi/bi-table-test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["toobar.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n * @Descripttion: \n * @version: \n * @Author: sueRimn\n * @Date: 2020-08-10 14:31:55\n * @LastEditors: sueRimn\n * @LastEditTime: 2020-08-18 18:20:12\n-->\n<template>\n  <div class=\"graph\">\n    <a-button @click=\"watchXml\" type=\"primary\">Primary</a-button>\n    <a-button @click=\"zoomIn\" type=\"primary\">zoomIn</a-button>\n    <a-button @click=\"zoomOut\" type=\"primary\">zoomOut</a-button>\n    <div id=\"graphToobar\" ref=\"graphToobar\"></div>\n    <a-modal v-model=\"visible\" title=\"Basic Modal\" @ok=\"handleOk\">\n      <div></div>\n      <codec :xmlInfo=\"xmlInfo\"></codec>\n    </a-modal>\n  </div>\n</template>\n\n<script>\nimport codec from './codec';\nimport mxgraph from '@/utils/graph';\nconst {\n  mxGraph,\n  mxClient,\n  mxUtils,\n  mxCell,\n  mxGeometry,\n  mxDivResizer,\n  mxConstants,\n  mxRubberband,\n  mxConnectionHandler,\n  mxToolbar,\n  mxGraphModel,\n  mxKeyHandler,\n  mxImage,\n  mxEvent,\n  mxCodec,\n  mxShape,\n  mxConnectionConstraint,\n  mxPoint,\n  mxPolyline\n} = mxgraph;\nexport default {\n  components: {\n    codec\n  },\n  data() {\n    return {\n      graphContent: '',\n      visible: false,\n      xmlInfo: ''\n    };\n  },\n  computed: {},\n  watch: {},\n  methods: {\n    deleteCell() {\n      console.log('111111111');\n      this.graphContent.removeCells();\n    },\n    handleOk(e) {\n      this.visible = false;\n    },\n    zoomIn() {\n      this.graphContent.zoomIn();\n    },\n    zoomOut() {\n      this.graphContent.zoomOut();\n    },\n    watchXml() {\n      // console.log(this.graphContent.getModel());\n      var encoder = new mxCodec();\n      var node = encoder.encode(this.graphContent.getModel());\n      var o = document.createElement('div');\n      o.appendChild(node);\n      let htmlString = o.innerHTML.replace(/[<>&\"]/g, function(c) {\n        return { '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' }[c];\n      });\n      this.xmlInfo = htmlString;\n      this.visible = true;\n    },\n    createDraph(boxContainer) {\n      const _this = this;\n      mxGraph.prototype.getAllConnectionConstraints = function(\n        terminal,\n        source\n      ) {\n        if (terminal != null && terminal.shape != null) {\n          if (terminal.shape.stencil != null) {\n            if (terminal.shape.stencil.constraints != null) {\n              return terminal.shape.stencil.constraints;\n            }\n          } else if (terminal.shape.constraints != null) {\n            return terminal.shape.constraints;\n          }\n        }\n\n        return null;\n      };\n      mxShape.prototype.constraints = [\n        new mxConnectionConstraint(new mxPoint(0.25, 0), true),\n        new mxConnectionConstraint(new mxPoint(0.5, 0), true),\n        new mxConnectionConstraint(new mxPoint(0.75, 0), true),\n        new mxConnectionConstraint(new mxPoint(0, 0.25), true),\n        new mxConnectionConstraint(new mxPoint(0, 0.5), true),\n        new mxConnectionConstraint(new mxPoint(0, 0.75), true),\n        new mxConnectionConstraint(new mxPoint(1, 0.25), true),\n        new mxConnectionConstraint(new mxPoint(1, 0.5), true),\n        new mxConnectionConstraint(new mxPoint(1, 0.75), true),\n        new mxConnectionConstraint(new mxPoint(0.25, 1), true),\n        new mxConnectionConstraint(new mxPoint(0.5, 1), true),\n        new mxConnectionConstraint(new mxPoint(0.75, 1), true)\n      ];\n\n      // Edges have no connection points\n      mxPolyline.prototype.constraints = null;\n      // Checks if browser is supported\n      if (!mxClient.isBrowserSupported()) {\n        // Displays an error message if the browser is\n        // not supported.\n        mxUtils.error('Browser is not supported!', 200, false);\n      } else {\n        // Defines an icon for creating new connections in the connection handler.\n        // This will automatically disable the highlighting of the source vertex.\n        mxConnectionHandler.prototype.connectImage = new mxImage(\n          'images/connector.gif',\n          16,\n          16\n        );\n\n        // Creates the div for the toolbar\n        var tbContainer = document.createElement('div');\n        tbContainer.style.position = 'absolute';\n        tbContainer.style.overflow = 'hidden';\n        tbContainer.style.padding = '2px';\n        tbContainer.style.left = '0px';\n        tbContainer.style.top = '0px';\n        tbContainer.style.width = '24px';\n        tbContainer.style.bottom = '0px';\n\n        boxContainer.appendChild(tbContainer);\n\n        // Creates new toolbar without event processing\n        var toolbar = new mxToolbar(tbContainer);\n        toolbar.enabled = false;\n\n        // Creates the div for the graph\n        var container = document.createElement('div');\n        container.style.position = 'absolute';\n        container.style.overflow = 'hidden';\n        container.style.left = '24px';\n        container.style.top = '0px';\n        container.style.right = '0px';\n        container.style.bottom = '0px';\n        container.style.background = 'url(\"images/grid.gif\")';\n\n        boxContainer.appendChild(container);\n\n        // boxContainer.appendChild(\n        //   mxUtils.button('View XML', function() {\n        //     var encoder = new mxCodec();\n        //     var node = encoder.encode(graph.getModel());\n        //     mxUtils.popup(mxUtils.getPrettyXml(node), true);\n        //   })\n        // );\n\n        // Workaround for Internet Explorer ignoring certain styles\n        if (mxClient.IS_QUIRKS) {\n          boxContainer.style.overflow = 'hidden';\n          new mxDivResizer(tbContainer);\n          new mxDivResizer(container);\n        }\n\n        // Creates the model and the graph inside the container\n        // using the fastest rendering available on the browser\n        var model = new mxGraphModel();\n        var graph = new mxGraph(container, model);\n\n        // Enables new connections in the graph\n        graph.setConnectable(true);\n        graph.setMultigraph(false);\n\n        // Stops editing on enter or escape keypress\n        var keyHandler = new mxKeyHandler(graph);\n        var rubberband = new mxRubberband(graph);\n\n        var addVertex = function(icon, w, h, style) {\n          var vertex = new mxCell(null, new mxGeometry(0, 0, w, h), style);\n          vertex.setVertex(true);\n\n          var img = _this.addToolbarItem(graph, toolbar, vertex, icon);\n          img.enabled = true;\n\n          graph.getSelectionModel().addListener(mxEvent.CHANGE, function() {\n            var tmp = graph.isSelectionEmpty();\n            mxUtils.setOpacity(img, tmp ? 100 : 20);\n            img.enabled = tmp;\n          });\n        };\n\n        addVertex('images/rectangle.gif', 100, 40, '');\n        addVertex('images/rounded.gif', 100, 40, 'shape=rounded');\n        addVertex('images/ellipse.gif', 40, 40, 'shape=ellipse');\n        addVertex('images/rhombus.gif', 40, 40, 'shape=rhombus');\n        addVertex('images/triangle.gif', 40, 40, 'shape=triangle');\n        addVertex('images/cylinder.gif', 40, 40, 'shape=cylinder');\n        addVertex('images/actor.gif', 30, 40, 'shape=actor');\n        _this.graphContent = graph;\n      }\n    },\n    addToolbarItem(graph, toolbar, prototype, image) {\n      // Function that is executed when the image is dropped on\n      // the graph. The cell argument points to the cell under\n      // the mousepointer if there is one.\n      var funct = function(graph, evt, cell, x, y) {\n        graph.stopEditing(false);\n\n        var vertex = graph.getModel().cloneCell(prototype);\n        vertex.geometry.x = x;\n        vertex.geometry.y = y;\n\n        graph.addCell(vertex);\n        graph.setSelectionCell(vertex);\n      };\n\n      // Creates the image which is used as the drag icon (preview)\n      var img = toolbar.addMode(null, image, function(evt, cell) {\n        var pt = this.graph.getPointForEvent(evt);\n        funct(graph, evt, cell, pt.x, pt.y);\n      });\n\n      // Disables dragging if element is disabled. This is a workaround\n      // for wrong event order in IE. Following is a dummy listener that\n      // is invoked as the last listener in IE.\n      mxEvent.addListener(img, 'mousedown', function(evt) {\n        // do nothing\n      });\n\n      // This listener is always called first before any other listener\n      // in all browsers.\n      mxEvent.addListener(img, 'mousedown', function(evt) {\n        if (img.enabled == false) {\n          mxEvent.consume(evt);\n        }\n      });\n\n      mxUtils.makeDraggable(img, graph, funct);\n\n      return img;\n    }\n  },\n  created() {},\n  mounted() {\n    const _this = this;\n    _this.$nextTick(() => {\n      if (_this.$refs.graphToobar) {\n        _this.createDraph(document.getElementById('graphToobar'));\n      }\n    });\n    document.onkeydown = function(e) {\n      let key = window.event.keyCode;\n      if (key == 46 || key == 8) {\n        _this.deleteCell();\n      }\n    };\n  },\n  beforeCreate() {},\n  beforeMount() {},\n  beforeUpdate() {},\n  updated() {},\n  beforeDestroy() {},\n  destroyed() {},\n  activated() {}\n};\n</script>\n<style lang=\"less\" scoped>\n.graph {\n  width: 100%;\n  height: 100%;\n  #graphToobar {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/mxgraph-text"}]}